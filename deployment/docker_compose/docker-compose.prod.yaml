name: pytupli-stack

services:
  mongo:
    image: mongo:8.0
    ports:
      - "27017:27017"
    env_file:
      - .env.mongo
    volumes:
      - mongo_data:/data/db  # Mount a volume for persistence
    profiles:
      - with_mongo

  api_server:
    build:
      context: ../..
      dockerfile: deployment/docker_compose/Dockerfile
    image: pytupli_api_server:latest
    depends_on:
      mongo:
        condition: service_started
        required: false
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    env_file:
      - .env

  nginx:
    image: nginx:1.28.0-alpine
    restart: always
    # nginx will immediately crash with `nginx: [emerg] host not found in upstream`
    # if api_server is not up
    depends_on:
      - api_server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../data/nginx:/etc/nginx/conf.d
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    # sleep a little bit to allow the api_server to start up.
    # Without this we've seen issues where nginx shows no error logs but
    # does not recieve any traffic
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"
    # The specified script waits for the api_server to start up.
    # Without this we've seen issues where nginx shows no error logs but
    # does not recieve any traffic
    # NOTE: we have to use dos2unix to remove Carriage Return chars from the file
    # in order to make this work on both Unix-like systems and windows
    command: >
      /bin/sh -c "dos2unix /etc/nginx/conf.d/run-nginx.sh
      && /etc/nginx/conf.d/run-nginx.sh app.conf.template"
    env_file:
      - .env.nginx

  # follows https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ../data/certbot/conf:/etc/letsencrypt
      - ../data/certbot/www:/var/www/certbot
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "6"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mongo_data:
    driver: local
